{
    "AWSTemplateFormatVersion": "2010-09-09",
	 
    "Description": "PROJECT-AEMClient",
    
	"Parameters": {      

        "pVPCid": {
            "Description": "VPC ID",
            "Type": "AWS::EC2::VPC::Id",
            "Default": "<vpc id>"
        },

        "pSubnetPubB": {
            "Description": "Subnet for Default Public B",
            "Type": "String",
            "Default": "<(PUBLIC) subnet id>"
        },


        "pKeyName": {            
            "Description": "KeyName",
            "Type": "String",
            "Default": "<ec2 key pair>"
        },
				 
        "pAMIAWSLinux": {
            "Description": "AMI Image to use for EC2 Instances",
            "Type": "String",
            "Default": "<ami id>"
        },




        "pLambdaS3Bucket": {
            "Description": "S3 Bucket Parameter",
            "Type": "String",
            "Default": "<S3 Bucket containing Lambda Function>"
        },

        "pLambdaS3Key": {
            "Description": "S3 Key Parameter",
            "Type": "String",
            "Default": "<S3 Key to lambda zip file containing function>"
        },

        "pLambdaRoleARN": {
            "Description": "Lambda ARN Role",
            "Type": "String",
            "Default": "<ARN of Lambda Role>"
        }


    }, 
    "Resources": {




        "rSecGrpMain": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "AEMClient - Main SecGroup",
                "VpcId": {
                    "Ref": "pVPCid"
                },
                "SecurityGroupIngress": [                   
                    {   "IpProtocol": "tcp", "FromPort": "22",   "ToPort": "22",    "CidrIp": "0.0.0.0/0" },
                    {   "IpProtocol": "tcp", "FromPort": "80",   "ToPort": "80",    "CidrIp": "0.0.0.0/0" },
                    {   "IpProtocol": "tcp", "FromPort": "4502", "ToPort": "4502",  "CidrIp": "0.0.0.0/0" }                   
                ],                  
                "Tags": [
                    {"Key": "Name", "Value": "SG - Main SecGroup"}
                ]
            }
        },



        "rRoleMain": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [ "sts:AssumeRole" ], 
                            "Effect": "Allow", 
                            "Principal": {
                                "Service": [ "ec2.amazonaws.com" ]
                            }
                        }
                    ]
                }, 
                "Path": "/", 
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Sid": "01",
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:Describe*"
                                    ], 
                                    "Resource": "*"
                                }                                
                            ]
                        }, 
                        "PolicyName": "policyMain"
                    }
                ]
            }
        },
                 
        "rInstPrfMain": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/", 
                "Roles": [ { "Ref": "rRoleMain" } ]
            }
        },








        "rEC2AEMAuthor" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "IamInstanceProfile": { "Ref": "rInstPrfMain" },
                "ImageId" : { "Ref": "pAMIAWSLinux" },
                "InstanceType": "m3.large",
                "KeyName": { "Ref": "pKeyName" },
                "SecurityGroupIds": [ { "Ref": "rSecGrpMain" } ],
                "SubnetId": {   "Ref": "pSubnetPubB"  },
                "Tags": [
                    { "Key": "Name",          "Value": "AEMClient-AEM Author" },
                    { "Key": "Application",   "Value": "PROJECT-AEMClient" }
                ]                      
            }
        },
        
        "rEC2SlackBot" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "IamInstanceProfile": { "Ref": "rInstPrfMain" },                
                "ImageId" : { "Ref": "pAMIAWSLinux" },
                "InstanceType": "t2.micro",
                "KeyName": { "Ref": "pKeyName" },
                "SecurityGroupIds": [ { "Ref": "rSecGrpMain" } ],
                "SubnetId": {   "Ref": "pSubnetPubB"  },
                "Tags": [
                    { "Key": "Name",          "Value": "AEMClient-Slackbot" },
                    { "Key": "Application",   "Value": "PROJECT-AEMClient" }
                ]                
            }
        },  



        "rSNSTopicAEMLambda": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "TopicName": "AEM_LambdaEvent",
                "DisplayName": "AEM Lambda Event"
            }
        },

        "rLambdaFncAEMAuthor": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Invoke AEM Author",
                "Code": {
                    "S3Bucket": { "Ref": "pLambdaS3Bucket" },
                    "S3Key": { "Ref": "pLambdaS3Key" }
                },
                "Handler": "main.lambda_handler",
                "MemorySize": 128,
                "Role": { "Ref": "pLambdaRoleARN" },
                "Runtime": "python2.7",
                "Timeout": 30
            }            
        }		

		
    }
}
